@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    <ul class="list-inline d-sm-inline-flex align-items-center">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item list-inline-item">
                <a id="manage" class="nav-link" style="color: #a5a18c" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li class="nav-item list-inline-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="nav-link btn btn-link" style="color: #a5a18c; font-size: 10px">Logout</button>
                </form>
            </li>
        }
        else
        {
            <!--<li class="nav-item">
            <a class="nav-link" id="register"  style="color: #363636" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>-->

            <li class="nav-item">
                <a class="nav-link" id="login" style="color: #a5a18c" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
